#!/usr/bin/env ruby -w

$: << File.expand_path(File.join(File.dirname(__FILE__), '..', 'lib' ))
require 'ppgit/utils'

if 0 == ARGV.length
  puts usage_message()

else
  # for testing, we pass an explicit - temporary - config file.
  file_part = argv_value_of('--file')
  file_part &&= "--file #{file_part}"
  PPGIT_FILE_PART = file_part

  if emailroot = argv_value_of('--email_root')
    set_git_value 'ppgit.emailroot' , emailroot
  end

  if ARGV == %w(info)
  # puts info_message

  elsif ARGV == %w(clear)
    restore_git_value :from => 'user-before-ppgit.name' , :to => 'user.name'
    restore_git_value :from => 'user-before-ppgit.email', :to => 'user.email'
    `git config #{file_part} --remove-section user-before-ppgit`
  # puts info_message

  elsif [2,3].include?(ARGV.length)

    backup_git_value :from => 'user.name' , :to => 'user-before-ppgit.name'
    backup_git_value :from => 'user.email', :to => 'user-before-ppgit.email'

    two_users  = [ARGV[0], ARGV[1]]
    pair_user  = two_users.sort.join('_')

    pair_email = ARGV[2]
    pair_email ||= email_from_email_root_and_user(pair_user)

    set_git_value 'user.name'  , pair_user
    if pair_email
      set_git_value 'user.email' , pair_email
    end
  # puts info_message
  end

  puts info_message
end